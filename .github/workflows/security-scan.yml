name: Security Scanning

permissions:
  contents: read
  security-events: write

on:
  schedule:
    - cron: "0 2 * * *" # Run daily at 2 AM UTC
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  # ============================================
  # Dependency Scanning
  # ============================================
  dependency-scan:
    name: Scan Dependencies
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - service: menu-service
            language: javascript
            manifest: package.json
          - service: order-service
            language: python
            manifest: requirements.txt
          - service: queue-service
            language: go
            manifest: go.mod
          - service: payment-service
            language: python
            manifest: requirements.txt
          - service: frontend
            language: javascript
            manifest: package.json

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js for JavaScript projects
        if: matrix.language == 'javascript'
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            ${{ matrix.service }}/package-lock.json
            ${{ matrix.service }}/pnpm-lock.yaml
            ${{ matrix.service }}/yarn.lock

      - name: Setup Go
        if: matrix.language == 'go'
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Setup Python
        if: matrix.language == 'python'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
          args: --file=${{ matrix.service }}/${{ matrix.manifest }} --severity-threshold=high

      - name: Run dependency-check
        if: matrix.language == 'java'
        working-directory: ./${{ matrix.service }}
        run: |
          ./mvnw dependency-check:check -DfailBuildOnCVSS=7

  # ============================================
  # Container Image Scanning
  # ============================================
  image-scan:
    name: Scan Container Images
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service:
          [
            menu-service,
            order-service,
            queue-service,
            payment-service,
            frontend,
          ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build image
        run: docker build -t canteen-${{ matrix.service }}:scan ./${{ matrix.service }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: canteen-${{ matrix.service }}:scan
          format: "sarif"
          output: "trivy-results-${{ matrix.service }}.sarif"

      - name: Upload Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        continue-on-error: true
        with:
          sarif_file: "trivy-results-${{ matrix.service }}.sarif"
          category: trivy-${{ matrix.service }}

      - name: Run Anchore Grype scanner
        uses: anchore/scan-action@v3
        continue-on-error: true
        with:
          image: canteen-${{ matrix.service }}:scan
          fail-build: false
          severity-cutoff: high

  # ============================================
  # Secret Scanning
  # ============================================
  secret-scan:
    name: Scan for Secrets
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        continue-on-error: true
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD

  # ============================================
  # Code Security Analysis
  # ============================================
  code-security:
    name: Code Security Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, python, java, go

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # ============================================
  # SBOM Generation
  # ============================================
  sbom-generation:
    name: Generate SBOM
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate SBOM with Syft
        uses: anchore/sbom-action@v0
        with:
          path: ./
          format: spdx-json
          output-file: sbom.spdx.json

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.spdx.json

  # ============================================
  # Security Report
  # ============================================
  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [dependency-scan, image-scan, secret-scan, code-security]
    if: always()

    steps:
      - name: Create security report
        run: |
          echo "# Security Scan Report" > security-report.md
          echo "" >> security-report.md
          echo "Date: $(date)" >> security-report.md
          echo "" >> security-report.md
          echo "## Scan Results" >> security-report.md
          echo "" >> security-report.md
          echo "- Dependency Scan: ${{ needs.dependency-scan.result }}" >> security-report.md
          echo "- Image Scan: ${{ needs.image-scan.result }}" >> security-report.md
          echo "- Secret Scan: ${{ needs.secret-scan.result }}" >> security-report.md
          echo "- Code Security: ${{ needs.code-security.result }}" >> security-report.md

      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security-report.md
