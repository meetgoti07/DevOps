services:
  # Databases
  postgres:
    image: postgres:17-alpine
    container_name: canteen-postgres
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - canteen-network

  mongodb:
    image: mongo:8.0
    container_name: canteen-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - canteen-network

  mysql:
    image: mysql:9.0
    container_name: canteen-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: orderdb
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - canteen-network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "admin",
          "-padmin123",
        ]
      timeout: 10s
      retries: 5
      interval: 5s
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: canteen-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - canteen-network

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: canteen-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
      RABBITMQ_DEFAULT_VHOST: /canteen
    ports:
      - "5672:5672" # AMQP port
      - "15672:15672" # Management UI port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - canteen-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      timeout: 10s
      retries: 5
      interval: 10s
      start_period: 30s

  # Microservices
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: canteen-api-gateway
    ports:
      - "80:80" # Main gateway port
      - "8080:80" # Alternative port
    depends_on:
      - user-service
      - menu-service
      - order-service
      - queue-service
      - payment-service
      - frontend
    networks:
      - canteen-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      timeout: 10s
      retries: 3
      interval: 30s
      start_period: 10s

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: canteen-user-service
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/userdb
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin123
      JWT_SECRET: your-secret-key-change-in-production
    depends_on:
      - postgres
    networks:
      - canteen-network

  menu-service:
    build:
      context: ./menu-service
      dockerfile: Dockerfile
    container_name: canteen-menu-service
    ports:
      - "8082:8082"
    environment:
      MONGODB_URI: mongodb://admin:admin123@mongodb:27017/menudb?authSource=admin
      PORT: 8082
    depends_on:
      - mongodb
    networks:
      - canteen-network

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: canteen-order-service
    ports:
      - "8083:8083"
    environment:
      DATABASE_URL: mysql://admin:admin123@mysql:3306/orderdb
      QUEUE_SERVICE_URL: http://queue-service:8084
      PAYMENT_SERVICE_URL: http://payment-service:8085
      MENU_SERVICE_URL: http://menu-service:8082
      RABBITMQ_URL: amqp://admin:admin123@rabbitmq:5672/canteen
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - canteen-network
    restart: unless-stopped

  queue-service:
    build:
      context: ./queue-service
      dockerfile: Dockerfile
    container_name: canteen-queue-service
    ports:
      - "8084:8084"
    environment:
      REDIS_URL: redis:6379
      PORT: 8084
      RABBITMQ_URL: amqp://admin:admin123@rabbitmq:5672/canteen
    depends_on:
      - redis
      - rabbitmq
    networks:
      - canteen-network

  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    container_name: canteen-payment-service
    ports:
      - "8085:8085"
    environment:
      DATABASE_PATH: /app/data/payments.db
      ORDER_SERVICE_URL: http://order-service:8083
      PORT: 8085
      RABBITMQ_URL: amqp://admin:admin123@rabbitmq:5672/canteen
    depends_on:
      - rabbitmq
    volumes:
      - payment_data:/app/data
    networks:
      - canteen-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: canteen-frontend
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_USER_SERVICE_URL: http://localhost:8081
      NEXT_PUBLIC_MENU_SERVICE_URL: http://localhost:8082
      NEXT_PUBLIC_ORDER_SERVICE_URL: http://localhost:8083
      NEXT_PUBLIC_QUEUE_SERVICE_URL: http://localhost:8084
      NEXT_PUBLIC_PAYMENT_SERVICE_URL: http://localhost:8085
    depends_on:
      - user-service
      - menu-service
      - order-service
      - queue-service
      - payment-service
    networks:
      - canteen-network

volumes:
  postgres_data:
  mongo_data:
  mysql_data:
  redis_data:
  payment_data:
  rabbitmq_data:

networks:
  canteen-network:
    driver: bridge
