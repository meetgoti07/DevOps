# API Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: canteen-system
  labels:
    app: api-gateway
    component: gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
        component: gateway
    spec:
      containers:
        - name: api-gateway
          image: gcr.io/canteen-qm-1761557373/canteen-api-gateway:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5

---
# API Gateway Service (LoadBalancer for external access)
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: canteen-system
  labels:
    app: api-gateway
    component: gateway
spec:
  selector:
    app: api-gateway
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: LoadBalancer

---
# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: canteen-system
  labels:
    app: frontend
    component: web
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        component: web
    spec:
      containers:
        - name: frontend
          image: gcr.io/canteen-qm-1761557373/canteen-frontend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          env:
            - name: NEXT_PUBLIC_API_URL
              value: "" # Empty string uses relative URLs (same domain as frontend)
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 5

---
# Frontend Service (ClusterIP, accessed through API Gateway)
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: canteen-system
  labels:
    app: frontend
    component: web
spec:
  selector:
    app: frontend
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
  type: ClusterIP
